{"ast":null,"code":"import _toConsumableArray from \"/Users/alexjoo/Desktop/react-memory/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/alexjoo/Desktop/react-memory/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/alexjoo/Desktop/react-memory/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/alexjoo/Desktop/react-memory/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/alexjoo/Desktop/react-memory/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/alexjoo/Desktop/react-memory/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/alexjoo/Desktop/react-memory/src/App.js\";\n// import React from \"react\";\nimport React, { Component } from 'react'; //lets you export multiple times\n\nimport Card from \"./components/Card\";\nimport Header from \"./components/Header\";\nimport Wrapper from \"./components/Wrapper\";\nimport pictures from \"./pictures.json\"; // import { Container, Row, Col } from 'reactstrap';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.startGame = function () {\n      _this.setState(function (prevState) {\n        function Shuffle(o) {\n          for (var j, x, i = o.length; i; j = parseInt(Math.random() * i, 10), x = o[--i], o[i] = o[j], o[j] = x) {\n            ;\n          }\n\n          return o;\n        }\n\n        Shuffle(prevState.pictures);\n        prevState.startingCards = _toConsumableArray(prevState.pictures).concat(_toConsumableArray(prevState.pictures)).slice(0, prevState.numberOfCards);\n        prevState.numberOfCards = prevState.startingCards.length;\n        prevState.hasWonGame = false;\n        prevState.newHighScore = false;\n        return prevState;\n      });\n    };\n\n    _this.state = {\n      pictures: pictures,\n      currentScore: 0,\n      highscore: 0,\n      hasWonGame: false,\n      newHighScore: false,\n      numberOfCards: 14,\n      startingCards: []\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    // checkIfClicked(id) {\n    //   // create a copy of the cards and use a random method to sort the array\n    //   let clickedCard = this.state.pictures.filter(pictures => pictures.id === id)[0];\n    //   let picturesCopy = this.state.pictures.slice().sort(function(a, b){return 0.5 - Math.random()});\n    //   // change boolean \"clicked\" to true if clicked \n    //   if (!clickedCard.clicked) {\n    //     clickedCard.clicked = true;\n    //     picturesCopy[picturesCopy.findIndex((pictures) => pictures.id === id)] = clickedCard;\n    //     // correct guess, increase score\n    //     this.setState({\n    //       pictures: picturesCopy,\n    //       currentScore: this.state.currentScore + 1,\n    //     });\n    //   }\n    //   // if a card has been clicked already, then set its click to false and reset the game\n    //   else {\n    //     let resetPicturesCopy = picturesCopy.map((pictures) => {\n    //       return {\n    //         id: pictures.id,\n    //         image: pictures.image,\n    //         clicked: false,\n    //       }\n    //     });\n    //     this.setState({\n    //       pictures: resetPicturesCopy,\n    //       currentScore: 0,\n    //     });\n    //   } \n    // }\n    // render the header, score, wrapper, and footer on the page using the current state values\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Header, {\n        currentScore: this.state.currentScore,\n        highscore: this.state.highscore,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), React.createElement(Wrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, this.state.pictures.map(function (pictures) {\n        return React.createElement(Card // clickCount={this.clickCount}\n        , {\n          onClick: _this2.checkIfClicked,\n          id: pictures.id,\n          image: pictures.image,\n          key: pictures.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        });\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App; // function App() {\n//   return (\n//     <div className = \"container\">\n//       <Header />\n//       <br></br>\n//       <Container className=\"rows\">\n//       <Row>\n//         <Col xs={3} md={4}> \n//           <Card image={pictures[0].image}/>\n//         </Col>\n//         <Col xs={3} md={4}>\n//           <Card image={pictures[1].image}/>\n//         </Col>\n//         <Col xs={3} md={4}>\n//           <Card image={pictures[2].image}/>\n//         </Col>\n//         <Col xs={3} md={4}>\n//           <Card image={pictures[3].image}/>\n//         </Col>\n//       </Row>\n//       <Row>\n//         <Col xs={3} md={4}> \n//           <Card image={pictures[4].image}/>\n//         </Col>\n//         <Col xs={3} md={4}>\n//           <Card image={pictures[5].image}/>\n//         </Col>\n//         <Col xs={3} md={4}>\n//           <Card image={pictures[6].image}/>\n//         </Col>\n//         <Col xs={3} md={4}>\n//           <Card image={pictures[7].image}/>\n//         </Col>\n//       </Row>\n//       <Row>\n//         <Col xs={3} md={4}> \n//           <Card image={pictures[8].image}/>\n//         </Col>\n//         <Col xs={3} md={4}>\n//           <Card image={pictures[9].image}/>\n//         </Col>\n//         <Col xs={3} md={4}>\n//           <Card image={pictures[10].image}/>\n//         </Col>\n//         <Col xs={3} md={4}>\n//           <Card image={pictures[11].image}/>\n//         </Col>\n//       </Row>\n//       </Container>\n//     </div>\n//   )\n// }\n// export default App;","map":{"version":3,"sources":["/Users/alexjoo/Desktop/react-memory/src/App.js"],"names":["React","Component","Card","Header","Wrapper","pictures","App","props","startGame","setState","prevState","Shuffle","o","j","x","i","length","parseInt","Math","random","startingCards","slice","numberOfCards","hasWonGame","newHighScore","state","currentScore","highscore","map","checkIfClicked","id","image"],"mappings":"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","sourcesContent":["// import React from \"react\";\nimport React, { Component } from 'react'; //lets you export multiple times\n\nimport Card from \"./components/Card\";\nimport Header from \"./components/Header\";\nimport Wrapper from \"./components/Wrapper\";\n\nimport pictures from \"./pictures.json\";\n// import { Container, Row, Col } from 'reactstrap';\n\nclass App extends Component {  \n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      pictures: pictures,\n      currentScore: 0,\n      highscore: 0,\n      hasWonGame: false,\n      newHighScore: false,\n      numberOfCards: 14,\n      startingCards: []\n    };\n  }\n  \n  startGame = () => {\n    this.setState(function(prevState) {\n      function Shuffle(o) {\n        for (\n          var j, x, i = o.length;\n          i;\n          j = parseInt(Math.random() * i, 10), x = o[--i], o[i] = o[j], o[j] = x\n        );\n        return o;\n      }\n      Shuffle(prevState.pictures);\n      prevState.startingCards = [\n        ...prevState.pictures,\n        ...prevState.pictures\n      ].slice(0, prevState.numberOfCards);\n      prevState.numberOfCards = prevState.startingCards.length;\n      prevState.hasWonGame = false;\n      prevState.newHighScore = false;\n      return prevState;\n    });\n  };\n  // checkIfClicked(id) {\n  //   // create a copy of the cards and use a random method to sort the array\n  //   let clickedCard = this.state.pictures.filter(pictures => pictures.id === id)[0];\n  //   let picturesCopy = this.state.pictures.slice().sort(function(a, b){return 0.5 - Math.random()});\n  //   // change boolean \"clicked\" to true if clicked \n  //   if (!clickedCard.clicked) {\n  //     clickedCard.clicked = true;\n  //     picturesCopy[picturesCopy.findIndex((pictures) => pictures.id === id)] = clickedCard;\n      \n  //     // correct guess, increase score\n  //     this.setState({\n  //       pictures: picturesCopy,\n  //       currentScore: this.state.currentScore + 1,\n  //     });\n  //   }\n    \n  //   // if a card has been clicked already, then set its click to false and reset the game\n  //   else {\n      \n  //     let resetPicturesCopy = picturesCopy.map((pictures) => {\n  //       return {\n  //         id: pictures.id,\n  //         image: pictures.image,\n  //         clicked: false,\n  //       }\n  //     });\n  //     this.setState({\n  //       pictures: resetPicturesCopy,\n  //       currentScore: 0,\n  //     });\n  //   } \n  // }\n  \n  // render the header, score, wrapper, and footer on the page using the current state values\n  render() {\n    return (\n      <div className=\"container\">\n        <Header currentScore={this.state.currentScore} highscore={this.state.highscore} />\n        <Wrapper>  \n          {this.state.pictures.map(pictures => (\n            <Card\n            // clickCount={this.clickCount}\n              onClick={this.checkIfClicked}\n              id={pictures.id}\n              image={pictures.image}\n              key = {pictures.id}\n              />\n          ))}\n        </Wrapper>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n\n\n// function App() {\n//   return (\n//     <div className = \"container\">\n//       <Header />\n//       <br></br>\n//       <Container className=\"rows\">\n//       <Row>\n//         <Col xs={3} md={4}> \n//           <Card image={pictures[0].image}/>\n//         </Col>\n//         <Col xs={3} md={4}>\n//           <Card image={pictures[1].image}/>\n//         </Col>\n//         <Col xs={3} md={4}>\n//           <Card image={pictures[2].image}/>\n//         </Col>\n//         <Col xs={3} md={4}>\n//           <Card image={pictures[3].image}/>\n//         </Col>\n//       </Row>\n//       <Row>\n//         <Col xs={3} md={4}> \n//           <Card image={pictures[4].image}/>\n//         </Col>\n//         <Col xs={3} md={4}>\n//           <Card image={pictures[5].image}/>\n//         </Col>\n//         <Col xs={3} md={4}>\n//           <Card image={pictures[6].image}/>\n//         </Col>\n//         <Col xs={3} md={4}>\n//           <Card image={pictures[7].image}/>\n//         </Col>\n//       </Row>\n//       <Row>\n//         <Col xs={3} md={4}> \n//           <Card image={pictures[8].image}/>\n//         </Col>\n//         <Col xs={3} md={4}>\n//           <Card image={pictures[9].image}/>\n//         </Col>\n//         <Col xs={3} md={4}>\n//           <Card image={pictures[10].image}/>\n//         </Col>\n//         <Col xs={3} md={4}>\n//           <Card image={pictures[11].image}/>\n//         </Col>\n//       </Row>\n//       </Container>\n//     </div>\n//   )\n\n\n// }\n\n// export default App;"]},"metadata":{},"sourceType":"module"}